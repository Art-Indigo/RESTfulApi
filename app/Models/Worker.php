<?php

namespace App\Models;

use App\Http\Resources\v1\WorkerResource;
use App\Http\Resources\v1\WorkersCollection;
use App\Scopes\WorkerScope;
use App\Traits\Offers;

/**
 * App\Models\Worker
 *
 * @property int $id
 * @property string $name
 * @property string $email
 * @property string $password
 * @property string $verified
 * @property string|null $verification_token
 * @property string $admin
 * @property string|null $remember_token
 * @property \Illuminate\Support\Carbon|null $created_at
 * @property \Illuminate\Support\Carbon|null $updated_at
 * @property-read \Illuminate\Database\Eloquent\Collection|\App\Models\Company[] $companies
 * @property-read int|null $companies_count
 * @property-read \Illuminate\Notifications\DatabaseNotificationCollection|\Illuminate\Notifications\DatabaseNotification[] $notifications
 * @property-read int|null $notifications_count
 * @property-read \Illuminate\Database\Eloquent\Collection|\App\Models\Offer[] $offers
 * @property-read int|null $offers_count
 * @property-read \Illuminate\Database\Eloquent\Collection|\App\Models\Offer[] $resume
 * @property-read int|null $resume_count
 * @property-write mixed $raw
 * @method static \Illuminate\Database\Eloquent\Builder|\App\Models\Worker newModelQuery()
 * @method static \Illuminate\Database\Eloquent\Builder|\App\Models\Worker newQuery()
 * @method static \Illuminate\Database\Eloquent\Builder|\App\Models\Worker query()
 * @method static \Illuminate\Database\Eloquent\Builder|\App\Models\Worker whereAdmin($value)
 * @method static \Illuminate\Database\Eloquent\Builder|\App\Models\Worker whereCreatedAt($value)
 * @method static \Illuminate\Database\Eloquent\Builder|\App\Models\Worker whereEmail($value)
 * @method static \Illuminate\Database\Eloquent\Builder|\App\Models\Worker whereId($value)
 * @method static \Illuminate\Database\Eloquent\Builder|\App\Models\Worker whereName($value)
 * @method static \Illuminate\Database\Eloquent\Builder|\App\Models\Worker wherePassword($value)
 * @method static \Illuminate\Database\Eloquent\Builder|\App\Models\Worker whereRememberToken($value)
 * @method static \Illuminate\Database\Eloquent\Builder|\App\Models\Worker whereUpdatedAt($value)
 * @method static \Illuminate\Database\Eloquent\Builder|\App\Models\Worker whereVerificationToken($value)
 * @method static \Illuminate\Database\Eloquent\Builder|\App\Models\Worker whereVerified($value)
 * @mixin \Eloquent
 * @property-read \Illuminate\Database\Eloquent\Collection|\Laravel\Passport\Client[] $clients
 * @property-read int|null $clients_count
 * @property-read \Illuminate\Database\Eloquent\Collection|\App\Models\Company[] $jobs
 * @property-read int|null $jobs_count
 * @property-read \Illuminate\Database\Eloquent\Collection|\Laravel\Passport\Token[] $tokens
 * @property-read int|null $tokens_count
 * @property-read \Illuminate\Database\Eloquent\Collection|\App\Models\Offer[] $offersForWorker
 * @property-read int|null $offers_for_worker_count
 * @property-read \Illuminate\Database\Eloquent\Collection|\App\Models\Offer[] $offersFromWorker
 * @property-read int|null $offers_from_worker_count
 */
class Worker extends User
{
    public $transformer = WorkerResource::class;

    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub
        static::addGlobalScope(new WorkerScope());
    }

    /**
     * @return \Illuminate\Database\Eloquent\Relations\BelongsToMany
     */
    public function jobs()
    {
        return $this->belongsToMany(Company::class, 'worker_company', 'worker_id', 'company_id')->withPivot('position', 'salary');
    }
}
